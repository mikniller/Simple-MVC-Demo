MVC tilbyder funktionalitet til server og client side validering.<br/>
Validering foregår primært via attributter på model properties.

<br /><b>Indbyggede</b>

<table class="table-bordered table-striped table-hover table-condensed">
    <thead>
    <tr>
        <th>attribut</th>
        <th>Beskrivelse</th>
    </tr>
    </thead>
    <tbody>
    <tr><td>CompareAttribute </td><td>Sammenlign to properties</td></tr>
    <tr><td>CustomValidationAttribute </td><td>Angiv en custom validation metode</td></tr>
    <tr><td>DataTypeAttribute </td><td>Data type - bruges ikke til validering</td></tr>
    <tr><td>MaxLengthAttribute </td><td>Max. array længde</td></tr>
    <tr><td>MinLengthAttribute </td><td>Min. arrat længde </td></tr>
    <tr><td>RangeAttribute </td><td>Numeric range  min - max </td></tr>
    <tr><td>RegularExpressionAttribute </td><td>Valider udfra requlært udtryk</td></tr>
    <tr><td>RequiredAttribute </td><td>´Property er påkrævet </td></tr>
    <tr><td>StringLengthAttribute </td><td>Min. og max. string længde</td></tr>
    </tbody>
</table>
<br/><b>Eksempel</b><br/>
ScoreModel.cs : <span class="glyphicon glyphicon-download file-info" data-file="ScoreModel.cs"></span>
<pre>
    public class ScoreModel
    {
        [Required(ErrorMessage="Hold1 er påkrævet")]
        public string Hold1 { get; set;  }
    
        [Range(0, 10, ErrorMessage = "Score skal være mellem 0 og 10")]
        public int Hold1Score { get; set; }
    }
</pre>             

Klient side validering:<br/>
Bruger jquery validate, med MS udvidelser
<pre>     
    &lt;input class="form-control text-box single-line" data-val="true" data-val-required="The Hold2 field is required." id="Hold2" name="Hold2" type="text" value="" /&gt;
    &lt;span class="field-validation-valid text-danger" data-valmsg-for="Hold2" data-valmsg-replace="true"&gt;&lt;/span&gt;

&lt;script src="/Scripts/jquery.validate.js"&gt;&lt;/script&gt;
&lt;script src="/Scripts/jquery.validate.unobtrusive.js"&gt;&lt;/script&gt;
</pre>



